"use strict";(self.webpackChunkofi_blog_versioned=self.webpackChunkofi_blog_versioned||[]).push([[1208],{3905:(e,a,n)=>{n.d(a,{Zo:()=>o,kt:()=>v});var t=n(67294);function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function m(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){i(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,i=function(e,a){if(null==e)return{};var n,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(i[n]=e[n]);return i}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=t.createContext({}),s=function(e){var a=t.useContext(p),n=a;return e&&(n="function"==typeof e?e(a):m(m({},a),e)),n},o=function(e){var a=s(e.components);return t.createElement(p.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},c=t.forwardRef((function(e,a){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,o=l(e,["components","mdxType","originalType","parentName"]),c=s(n),v=i,N=c["".concat(p,".").concat(v)]||c[v]||d[v]||r;return n?t.createElement(N,m(m({ref:a},o),{},{components:n})):t.createElement(N,m({ref:a},o))}));function v(e,a){var n=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var r=n.length,m=new Array(r);m[0]=c;var l={};for(var p in a)hasOwnProperty.call(a,p)&&(l[p]=a[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,m[1]=l;for(var s=2;s<r;s++)m[s]=n[s];return t.createElement.apply(null,m)}return t.createElement.apply(null,n)}c.displayName="MDXCreateElement"},71372:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>p,contentTitle:()=>m,default:()=>f,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var t=n(83117),i=(n(67294),n(3905));const r={sidebar_label:"Listen 2D",sidebar_custom_props:{id:"4f55c963-d60b-4e97-bab7-cfaa8f8b0cf1",source:{name:"sdg"}}},m="Zweidimensionale Listen",l={unversionedId:"EF-Python/Python/Listen-2D",id:"EF-Python/Python/Listen-2D",title:"Zweidimensionale Listen",description:"Zweidimensionale Liste",source:"@site/docs/EF-Python/03-Python/02-Listen-2D.md",sourceDirName:"EF-Python/03-Python",slug:"/EF-Python/Python/Listen-2D",permalink:"/EF-Python/Python/Listen-2D",draft:!1,editUrl:"https://github.com/lebalz/ofi-blog/edit/main/docs/EF-Python/03-Python/02-Listen-2D.md",tags:[],version:"current",lastUpdatedAt:1661700137,formattedLastUpdatedAt:"28. Aug. 2022",sidebarPosition:2,frontMatter:{sidebar_label:"Listen 2D",sidebar_custom_props:{id:"4f55c963-d60b-4e97-bab7-cfaa8f8b0cf1",source:{name:"sdg"}}},sidebar:"sidebar",previous:{title:"Listen 1D",permalink:"/EF-Python/Python/Listen-1D"},next:{title:"List Comprehension",permalink:"/EF-Python/Python/Listcomprehension"}},p={},s=[],o=e=>function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",a)},d=o("Comment"),c=o("Figure"),v=o("SourceRef"),N={toc:s};function f(e){let{components:a,...r}=e;return(0,i.kt)("wrapper",(0,t.Z)({},N,r,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"commentable"},(0,i.kt)("h1",{parentName:"div",id:"zweidimensionale-listen"},"Zweidimensionale Listen"),(0,i.kt)(d,{parentName:"div",type:"heading",nr:0,mdxType:"Comment"})),(0,i.kt)("div",{className:"commentable"},(0,i.kt)(c,{parentName:"div",options:{},mdxType:"Figure"},(0,i.kt)("img",{alt:"Zweidimensionale Liste",src:n(8610).Z,width:"1024",height:"576"}),(0,i.kt)("figcaption",{parentName:"Figure"},(0,i.kt)("span",{parentName:"figcaption",style:{flexGrow:1}}),"Zweidimensionale Liste",(0,i.kt)("span",{parentName:"figcaption",style:{flexGrow:1}}),(0,i.kt)(v,{parentName:"figcaption",bib:{author:"Christian Mayer",source:"https://blog.finxter.com/python-list-of-lists/",licence:"Unknown",licence_url:"",edited:!1},mdxType:"SourceRef"}))),(0,i.kt)(d,{parentName:"div",type:"figure",nr:0,mdxType:"Comment"})),(0,i.kt)("div",{className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Eine Liste, welche einfach eine Reihe von Zahlen oder Texten enth\xe4lt, ist eine ",(0,i.kt)("strong",{parentName:"p"},"eindimensionale")," Liste. Aus der Mathematik kennen wir auch Matrizen, oder Tabellen. Diese bestehen aus ",(0,i.kt)("strong",{parentName:"p"},"Zeilen")," und ",(0,i.kt)("strong",{parentName:"p"},"Spalten"),", haben also ",(0,i.kt)("strong",{parentName:"p"},"zwei Dimensionen"),"."),(0,i.kt)(d,{parentName:"div",type:"paragraph",nr:0,mdxType:"Comment"})),(0,i.kt)("div",{className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Das kann man in Python auch machen. Man muss dazu einfach f\xfcr jede Zeile eine Liste erzeugen und dann diese Listen als Elemente in einer weiteren Liste speichern. So entsteht eine Liste von Listen."),(0,i.kt)(d,{parentName:"div",type:"paragraph",nr:1,mdxType:"Comment"})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"# Eine Liste\n[\n    [1, 2, 3], # Zeile\n    [4, 5, 6], # Zeile\n    [7, 8, 9], # Zeile\n]\n\n# oder \xe4quivalent in einer Zeile dargestellt\n[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n")),(0,i.kt)("div",{className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Dies kann man beliebig oft wiederholen und kommt so zu 3-, 4- bis n-dimensionalen Listen."),(0,i.kt)(d,{parentName:"div",type:"paragraph",nr:2,mdxType:"Comment"})),(0,i.kt)("div",{className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Man kann in Python auch zwei- oder gar ",(0,i.kt)("em",{parentName:"p"},"n"),"-dimensionale Listen haben. F\xfcr Python ist das nichts anderes, als eine Liste, deren Elemente wiederum Listen sind.\nF\xfcr jede zus\xe4tzlich Dimension wird eine weitere Verschachtelungsstufe hizugef\xfcgt.\nBei zwei Dimensionen kann man auf diese Wiese in Python Matrizen, bzw. Tabellen mit mehreren Zeilen und Spalten darstellen. ",(0,i.kt)("sup",{parentName:"p",id:"fnref-1"},(0,i.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1"))),(0,i.kt)(d,{parentName:"div",type:"paragraph",nr:3,mdxType:"Comment"})),(0,i.kt)("div",{className:"admonition admonition-def alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false","data-prefix":"far","data-icon":"file-code",className:"svg-inline--fa fa-file-code fa-w-12",role:"img",viewBox:"0 0 384 512"},(0,i.kt)("path",{parentName:"svg",fill:"currentColor",d:"M149.9 349.1l-.2-.2-32.8-28.9 32.8-28.9c3.6-3.2 4-8.8.8-12.4l-.2-.2-17.4-18.6c-3.4-3.6-9-3.7-12.4-.4l-57.7 54.1c-3.7 3.5-3.7 9.4 0 12.8l57.7 54.1c1.6 1.5 3.8 2.4 6 2.4 2.4 0 4.8-1 6.4-2.8l17.4-18.6c3.3-3.5 3.1-9.1-.4-12.4zm220-251.2L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM256 51.9l76.1 76.1H256zM336 464H48V48h160v104c0 13.3 10.7 24 24 24h104zM209.6 214c-4.7-1.4-9.5 1.3-10.9 6L144 408.1c-1.4 4.7 1.3 9.6 6 10.9l24.4 7.1c4.7 1.4 9.6-1.4 10.9-6L240 231.9c1.4-4.7-1.3-9.6-6-10.9zm24.5 76.9l.2.2 32.8 28.9-32.8 28.9c-3.6 3.2-4 8.8-.8 12.4l.2.2 17.4 18.6c3.3 3.5 8.9 3.7 12.4.4l57.7-54.1c3.7-3.5 3.7-9.4 0-12.8l-57.7-54.1c-3.5-3.3-9.1-3.2-12.4.4l-17.4 18.6c-3.3 3.5-3.1 9.1.4 12.4z"}))),"Def")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("div",{parentName:"div",className:"commentable"},(0,i.kt)("h3",{parentName:"div",id:"3-x-3-matrix"},"3 x 3 Matrix"),(0,i.kt)(d,{parentName:"div",type:"heading",nr:1,mdxType:"Comment"})),(0,i.kt)("div",{parentName:"div",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Eine Matrix ist eine Liste von Listen"),(0,i.kt)(d,{parentName:"div",type:"paragraph",nr:4,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"matrix_3x3 = [\n    [1, 2, 3], \n    [4, 5, 6], \n    [7, 8, 9]\n]\nprint(matrix_3x3)\n")))),(0,i.kt)("div",{className:"admonition admonition-def alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false","data-prefix":"far","data-icon":"file-code",className:"svg-inline--fa fa-file-code fa-w-12",role:"img",viewBox:"0 0 384 512"},(0,i.kt)("path",{parentName:"svg",fill:"currentColor",d:"M149.9 349.1l-.2-.2-32.8-28.9 32.8-28.9c3.6-3.2 4-8.8.8-12.4l-.2-.2-17.4-18.6c-3.4-3.6-9-3.7-12.4-.4l-57.7 54.1c-3.7 3.5-3.7 9.4 0 12.8l57.7 54.1c1.6 1.5 3.8 2.4 6 2.4 2.4 0 4.8-1 6.4-2.8l17.4-18.6c3.3-3.5 3.1-9.1-.4-12.4zm220-251.2L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM256 51.9l76.1 76.1H256zM336 464H48V48h160v104c0 13.3 10.7 24 24 24h104zM209.6 214c-4.7-1.4-9.5 1.3-10.9 6L144 408.1c-1.4 4.7 1.3 9.6 6 10.9l24.4 7.1c4.7 1.4 9.6-1.4 10.9-6L240 231.9c1.4-4.7-1.3-9.6-6-10.9zm24.5 76.9l.2.2 32.8 28.9-32.8 28.9c-3.6 3.2-4 8.8-.8 12.4l.2.2 17.4 18.6c3.3 3.5 8.9 3.7 12.4.4l57.7-54.1c3.7-3.5 3.7-9.4 0-12.8l-57.7-54.1c-3.5-3.3-9.1-3.2-12.4.4l-17.4 18.6c-3.3 3.5-3.1 9.1.4 12.4z"}))),"Def")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("div",{parentName:"div",className:"commentable"},(0,i.kt)("h3",{parentName:"div",id:"zugriff-"},"Zugriff ",(0,i.kt)("inlineCode",{parentName:"h3"},"[][]")),(0,i.kt)(d,{parentName:"div",type:"heading",nr:2,mdxType:"Comment"})),(0,i.kt)("div",{parentName:"div",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Auf einzelne Element in der Matrix zugreifen"),(0,i.kt)(d,{parentName:"div",type:"paragraph",nr:5,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"# kann auch auf einer Zeile geschrieben werden:\nmatrix_3x3 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n\n# 3. Wert in 1. Zeile ver\xe4ndern\nmatrix_3x3[0][2] = 0\n# Werte ausgeben\nprint(matrix_3x3[0][2])\nprint(matrix_3x3[2][0])\n")))),(0,i.kt)("div",{className:"admonition admonition-def alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false","data-prefix":"far","data-icon":"file-code",className:"svg-inline--fa fa-file-code fa-w-12",role:"img",viewBox:"0 0 384 512"},(0,i.kt)("path",{parentName:"svg",fill:"currentColor",d:"M149.9 349.1l-.2-.2-32.8-28.9 32.8-28.9c3.6-3.2 4-8.8.8-12.4l-.2-.2-17.4-18.6c-3.4-3.6-9-3.7-12.4-.4l-57.7 54.1c-3.7 3.5-3.7 9.4 0 12.8l57.7 54.1c1.6 1.5 3.8 2.4 6 2.4 2.4 0 4.8-1 6.4-2.8l17.4-18.6c3.3-3.5 3.1-9.1-.4-12.4zm220-251.2L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM256 51.9l76.1 76.1H256zM336 464H48V48h160v104c0 13.3 10.7 24 24 24h104zM209.6 214c-4.7-1.4-9.5 1.3-10.9 6L144 408.1c-1.4 4.7 1.3 9.6 6 10.9l24.4 7.1c4.7 1.4 9.6-1.4 10.9-6L240 231.9c1.4-4.7-1.3-9.6-6-10.9zm24.5 76.9l.2.2 32.8 28.9-32.8 28.9c-3.6 3.2-4 8.8-.8 12.4l.2.2 17.4 18.6c3.3 3.5 8.9 3.7 12.4.4l57.7-54.1c3.7-3.5 3.7-9.4 0-12.8l-57.7-54.1c-3.5-3.3-9.1-3.2-12.4.4l-17.4 18.6c-3.3 3.5-3.1 9.1.4 12.4z"}))),"Def")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("div",{parentName:"div",className:"commentable"},(0,i.kt)("h3",{parentName:"div",id:"schleife-\xfcber-zeilen"},"Schleife \xfcber Zeilen"),(0,i.kt)(d,{parentName:"div",type:"heading",nr:3,mdxType:"Comment"})),(0,i.kt)("div",{parentName:"div",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Schleife \xfcber einzelne Zeilen -> Zeilen sind wieder Listen"),(0,i.kt)(d,{parentName:"div",type:"paragraph",nr:6,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"matrix_3x3 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\nfor zeile in matrix_3x3:\n    print(zeile)\n")))),(0,i.kt)("div",{className:"admonition admonition-def alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false","data-prefix":"far","data-icon":"file-code",className:"svg-inline--fa fa-file-code fa-w-12",role:"img",viewBox:"0 0 384 512"},(0,i.kt)("path",{parentName:"svg",fill:"currentColor",d:"M149.9 349.1l-.2-.2-32.8-28.9 32.8-28.9c3.6-3.2 4-8.8.8-12.4l-.2-.2-17.4-18.6c-3.4-3.6-9-3.7-12.4-.4l-57.7 54.1c-3.7 3.5-3.7 9.4 0 12.8l57.7 54.1c1.6 1.5 3.8 2.4 6 2.4 2.4 0 4.8-1 6.4-2.8l17.4-18.6c3.3-3.5 3.1-9.1-.4-12.4zm220-251.2L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM256 51.9l76.1 76.1H256zM336 464H48V48h160v104c0 13.3 10.7 24 24 24h104zM209.6 214c-4.7-1.4-9.5 1.3-10.9 6L144 408.1c-1.4 4.7 1.3 9.6 6 10.9l24.4 7.1c4.7 1.4 9.6-1.4 10.9-6L240 231.9c1.4-4.7-1.3-9.6-6-10.9zm24.5 76.9l.2.2 32.8 28.9-32.8 28.9c-3.6 3.2-4 8.8-.8 12.4l.2.2 17.4 18.6c3.3 3.5 8.9 3.7 12.4.4l57.7-54.1c3.7-3.5 3.7-9.4 0-12.8l-57.7-54.1c-3.5-3.3-9.1-3.2-12.4.4l-17.4 18.6c-3.3 3.5-3.1 9.1.4 12.4z"}))),"Def")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("div",{parentName:"div",className:"commentable"},(0,i.kt)("h3",{parentName:"div",id:"durch-alle-elemente-iterieren"},"Durch alle Elemente Iterieren"),(0,i.kt)(d,{parentName:"div",type:"heading",nr:4,mdxType:"Comment"})),(0,i.kt)("div",{parentName:"div",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Dazu wird eine ",(0,i.kt)("strong",{parentName:"p"},"verschachtelte Schleife")," \xfcber Zeilen und Spalten verwendet."),(0,i.kt)(d,{parentName:"div",type:"paragraph",nr:7,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"matrix_3x3 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\nfor zeile in matrix_3x3:\n    for zahl in zeile:\n        print(zahl)\n")),(0,i.kt)("div",{parentName:"div",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Oder man greift \xfcber Zeilen- (",(0,i.kt)("inlineCode",{parentName:"p"},"i"),") und Spaltenindices (",(0,i.kt)("inlineCode",{parentName:"p"},"j"),") auf die Elemente zu:"),(0,i.kt)(d,{parentName:"div",type:"paragraph",nr:8,mdxType:"Comment"})),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"matrix_3x3 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\nfor i in range(len(matrix_3x3)):\n    for j in range(len(matrix_3x3[i])):\n        print(f'(i: {i}, j: {j}) =', matrix_3x3[i][j])\n")))),(0,i.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("div",{parentName:"div",className:"commentable"},(0,i.kt)("h5",{parentName:"div",id:"h\xe4ufige-fehlerquellen-1"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"H\xe4ufige Fehlerquellen"),(0,i.kt)(d,{parentName:"div",type:"heading",nr:5,mdxType:"Comment"}))),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("div",{parentName:"div",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Exotisches (und oft Grund f\xfcr Fehler):"),(0,i.kt)(d,{parentName:"div",type:"paragraph",nr:9,mdxType:"Comment"})),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("div",{parentName:"li",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Innere Listen sind unterschiedlich lang durch"),(0,i.kt)(d,{parentName:"div",type:"paragraph",nr:10,mdxType:"Comment"})),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("div",{parentName:"li",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Anh\xe4ngen eines weiteren Elementes"),(0,i.kt)(d,{parentName:"div",type:"paragraph",nr:11,mdxType:"Comment"}))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("div",{parentName:"li",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Anh\xe4ngen einer weiteren Zeile mit unterschiedlicher L\xe4nge"),(0,i.kt)(d,{parentName:"div",type:"paragraph",nr:12,mdxType:"Comment"}))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("div",{parentName:"li",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"..."),(0,i.kt)(d,{parentName:"div",type:"paragraph",nr:13,mdxType:"Comment"}))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("div",{parentName:"li",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Einf\xfcgen eines String (oder irgend etwas anderes) in die \xe4ussere oder innere Liste"),(0,i.kt)(d,{parentName:"div",type:"paragraph",nr:14,mdxType:"Comment"})))),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py slim",live_py:!0,slim:!0},"matrix_3x3 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n\nmatrix_3x3[1].append(13)\nmatrix_3x3.append([31])\nmatrix_3x3.insert(2, 'blabla')\n\nfor zeile in matrix_3x3:\n    print(zeile)\n")))),(0,i.kt)("div",{className:"footnotes"},(0,i.kt)("hr",{parentName:"div"}),(0,i.kt)("ol",{parentName:"div"},(0,i.kt)("li",{parentName:"ol",id:"fn-1"},(0,i.kt)("div",{parentName:"li",className:"commentable"},(0,i.kt)("p",{parentName:"div"},"Quelle ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.gbsl.website/gymbefin23/material/-/snippets/11"},"sdg")),(0,i.kt)(d,{parentName:"div",type:"paragraph",nr:15,mdxType:"Comment"})),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"#fnref-1",className:"footnote-backref"},"\u21a9"))))))}f.isMDXComponent=!0},8610:(e,a,n)=>{n.d(a,{Z:()=>t});const t=n.p+"assets/images/2d-listen-386eb5fccaee3fe7c7701e1a4508f634.jpeg"}}]);