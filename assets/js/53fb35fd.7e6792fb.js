"use strict";(self.webpackChunkofi_blog_versioned=self.webpackChunkofi_blog_versioned||[]).push([[49598],{603905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return p}});var r=t(667294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),f=s(t),p=i,m=f["".concat(c,".").concat(p)]||f[p]||u[p]||a;return t?r.createElement(m,o(o({ref:n},d),{},{components:t})):r.createElement(m,o({ref:n},d))}));function p(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=f;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},884384:function(e,n,t){t.d(n,{Z:function(){return u}});var r=t(667294),i={container:"container_AFEI",bib:"bib_DV92",visible:"visible_D99O",details:"details_Z4o0",noMargins:"noMargins_PVGS"},a=t(592814),o=t(51436),l=t(386010),c=function(e){return r.createElement("span",{className:i.details},r.createElement("span",{className:(0,l.default)("badge badge--secondary",i.badgeItem)},"Autor: ",e.author),r.createElement("a",{href:e.licence_url,target:"_blank",className:i.badgeItem},r.createElement("span",{className:(0,l.default)("badge badge--secondary")},"Lizenz: ",e.licence)),e.edited&&r.createElement("span",{className:(0,l.default)("badge badge--secondary",i.badgeItem)},"Bearbeitet"),r.createElement("a",{href:e.source,target:"_blank",className:i.badgeItem},r.createElement("span",{className:(0,l.default)("badge badge--secondary")},r.createElement(a.G,{icon:o.Xjp}))))},s=function(e,n){return void 0===n&&(n="px"),/^\d+(\.\d*)?$/.test(e)?""+e+n:e},d=function(e){var n={},t=Object.assign({},e.options);return t.noMargins&&delete t.noMargins,t.size&&(n.maxWidth="min(90vw, "+s(t.size)+")",n.maxHeight=s(t.size),delete t.size),t.height&&(n.maxHeight=s(t.height),n.height=s(t.height),delete t.height),t.width&&(n.maxWidth="min(90vw, "+s(t.width)+")",n.width=s(t.width),delete t.width),n=Object.assign({},n,t),r.createElement("img",{src:e.src,alt:e.alt,style:n,title:e.isInline&&e.bib?"Author: "+e.bib.author+" @ "+e.bib.licence+(e.bib.edited?", Bearbeitet":""):void 0})},u=function(e){if(e.isInline)return r.createElement(d,e);var n=r.useState(!1),t=(n[0],n[1]),a=r.useState(!1),o=a[0],s=a[1],u=e.caption&&"undefined"!==e.caption,f=e.bib||u;return e.options.noMargins&&!0,r.createElement("figure",{className:(0,l.default)(i.container,e.options.noMargins&&i.noMargins),onMouseEnter:function(){return t(!0)},onMouseOut:function(e){var n,r,i,a,o;n=e.currentTarget.getBoundingClientRect(),r=e.clientX,i=e.clientY,a=n.left<=r&&n.right>=r,o=n.top<=i&&n.bottom>=i,a&&o||t(!1)}},r.createElement(d,e),f&&r.createElement("figcaption",null,u&&r.createElement("span",null,e.caption),e.bib&&r.createElement("span",{className:(0,l.default)(i.bib,o?i.visible:void 0),onClick:function(){return s(!o)}},"@"),o&&r.createElement(c,e.bib)))}},643273:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return c},metadata:function(){return d},toc:function(){return f}});var r=t(583117),i=t(480102),a=(t(667294),t(603905)),o=t(884384),l=["components"],c={},s="For Schleife",d={unversionedId:"Programmieren-1/Turtles/for-loop",id:"version-24i/Programmieren-1/Turtles/for-loop",title:"For Schleife",description:"Programmiersprachen k\xf6nnen Code-Teile mehrfach nacheinander ausf\xfchren. In Python gibt es dabei zwei Konzepte. Die for Schleife und die while Schleife.",source:"@site/versioned_docs/version-24i/04-Programmieren-1/Turtles/002-for-loop.md",sourceDirName:"04-Programmieren-1/Turtles",slug:"/Programmieren-1/Turtles/for-loop",permalink:"/24i/Programmieren-1/Turtles/for-loop",draft:!1,editUrl:"https://github.com/lebalz/ofi-blog/edit/main/versioned_docs/version-24i/04-Programmieren-1/Turtles/002-for-loop.md",tags:[],version:"24i",sidebarPosition:2,frontMatter:{},sidebar:"version-24i/sidebar",previous:{title:"Ein Python Algorithmus",permalink:"/24i/Programmieren-1/Turtles/intro"},next:{title:"While Schleife",permalink:"/24i/Programmieren-1/Turtles/while-loop"}},u={},f=[{value:"Was ist die Ausgabe des folgenden Programms?",id:"was-ist-die-ausgabe-des-folgenden-programms",level:2}],p={toc:f};function m(e){var n=e.components,c=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},p,c,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"for-schleife"},"For Schleife"),(0,a.kt)("p",null,"Programmiersprachen k\xf6nnen Code-Teile mehrfach nacheinander ausf\xfchren. In Python gibt es dabei zwei Konzepte. Die ",(0,a.kt)("inlineCode",{parentName:"p"},"for")," Schleife und die ",(0,a.kt)("inlineCode",{parentName:"p"},"while")," Schleife."),(0,a.kt)("p",null,"Die ",(0,a.kt)("inlineCode",{parentName:"p"},"for")," Schleife kann man sich wie ein Ticket-Schalter vorstellen. Der Verk\xe4ufer am Schalter bedient der Reihe nach jede Person in der Warteschlange und wiederholt jedesmal dieselbe Aufgabe: ",(0,a.kt)("em",{parentName:"p"},"den Kunden bedienen")),(0,a.kt)("div",{style:{display:"flex",justifyContent:"center"}},(0,a.kt)(o.Z,{bib:void 0,caption:"Warteschlange",options:{},isInline:!1,src:t(63729).Z,alt:"Warteschlange",mdxType:"Image"})),(0,a.kt)("p",null,"In Python wird die Warteschleife als Liste in eckigen Klammern geschrieben:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py id=3f6dd4e0-f5bf-4d2f-ad8e-ee414e97cece",live_py:!0,id:"3f6dd4e0-f5bf-4d2f-ad8e-ee414e97cece"},"for person in ['Jack', 'Maria', 'Reto']:\n    print(f'Guten Tag {person}, wie kann ich helfen?')\n    print('...')\n    print('Auf wiedersehen')\n")),(0,a.kt)("p",null,"Die Personen ",(0,a.kt)("em",{parentName:"p"},"Jack"),", ",(0,a.kt)("em",{parentName:"p"},"Maria")," und ",(0,a.kt)("em",{parentName:"p"},"Reto")," werden nacheinander begr\xfcsst, bedient und verabschiedet:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-txt"},"Guten Tag Jack, wie kann ich helfen?\n...\nAuf wiedersehen.\n\nGuten Tag Maria, wie kann ich helfen?\n...\nAuf wiedersehen.\n\nGuten Tag Reto, wie kann ich helfen?\n...\nAuf wiedersehen.\n")),(0,a.kt)("p",null,"Um einen beliebigen Code-Teil mehrfach nacheinander auszuf\xfchren, k\xf6nnen wir nun auch Zahlen als Warteschleife verwenden:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py id=0c4d6d9b-158d-4558-8902-bf4d09254b1e",live_py:!0,id:"0c4d6d9b-158d-4558-8902-bf4d09254b1e"},"from turtle import *\nfor counter in [0, 1, 2, 3]:\n    forward(100)\n    left(90)\n")),(0,a.kt)("p",null,"F\xfcr jede Zahl wird der Code-Teil wiederholt:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py id=c482f58c-66bb-4406-ad47-e42b4f6ee971",live_py:!0,id:"c482f58c-66bb-4406-ad47-e42b4f6ee971"},"from turtle import *\n# 0\nforward(100)\nleft(90)\n# 1\nforward(100)\nleft(90)\n# 2\nforward(100)\nleft(90)\n# 3\nforward(100)\nleft(90)\n")),(0,a.kt)("p",null,"Oder in Kurzschreibweise:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py id=46a4e93f-80c8-4e66-ab86-f187b810a8e8",live_py:!0,id:"46a4e93f-80c8-4e66-ab86-f187b810a8e8"},"from turtle import *\nfor counter in range(4):\n    forward(100)\n    left(90)\n")),(0,a.kt)("p",null,"wobei ",(0,a.kt)("inlineCode",{parentName:"p"},"range(4)")," eine Warteschleife mit ",(0,a.kt)("inlineCode",{parentName:"p"},"4")," Elementen erzeugt."),(0,a.kt)("h2",{id:"was-ist-die-ausgabe-des-folgenden-programms"},"Was ist die Ausgabe des folgenden Programms?"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py id=63756aea-ee47-4805-b077-8637a09ca08d",live_py:!0,id:"63756aea-ee47-4805-b077-8637a09ca08d"},"from turtle import *\npenup()\ngoto(-30, 0)\npendown()\n\nfor counter in range(8):\n    forward(60)\n    left(45)\n\npenup()\ngoto(-30, 100)\npendown()\n\nsetheading(180)     # Orientierung nach links: \u25c0\ufe0f\n\nfor counter in range(8):\n    forward(5)\n    right(45)\n\npenup()\ngoto(30, 100)\npendown()\n\nsetheading(0)       # Orientierung nach rechts: \u25b6\ufe0f\n\n\nfor counter in range(8):\n    forward(5)\n    left(45)\n\npenup()\ngoto(-48, 40)\npendown()\n\nsetheading(-45)     # Orientierung nach rechts unten: \u2198\ufe0f\n\nfor counter in range(3):\n    forward(40)\n    left(45)\n\n")))}m.isMDXComponent=!0},63729:function(e,n,t){n.Z=t.p+"assets/images/queue-8064bf7946c4724e4fbeb25e2d35cb83.png"}}]);