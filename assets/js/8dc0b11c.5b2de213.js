"use strict";(self.webpackChunkofi_blog_versioned=self.webpackChunkofi_blog_versioned||[]).push([[5773],{97670:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>f,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var t=i(83117),o=(i(67294),i(3905));i(61839);const r={sidebar_custom_props:{id:"fe993860-603b-4f54-9c92-758dec79a18d"}},s="Labyrinth",a={unversionedId:"snippets/maze",id:"snippets/maze",title:"Labyrinth",description:"Ausgangslage f\xfcr die Programmierung eines prefekten Labyrinths",source:"@site/docs/snippets/maze.md",sourceDirName:"snippets",slug:"/snippets/maze",permalink:"/snippets/maze",draft:!1,editUrl:"https://github.com/lebalz/ofi-blog/edit/main/docs/snippets/maze.md",tags:[],version:"current",lastUpdatedAt:1661700137,formattedLastUpdatedAt:"28. Aug. 2022",frontMatter:{sidebar_custom_props:{id:"fe993860-603b-4f54-9c92-758dec79a18d"}},sidebar:"sidebar",previous:{title:"VueJS",permalink:"/notes/vuejs"},next:{title:"Phaser",permalink:"/snippets/python-phaserjs"}},p={},d=[{value:"Ausgangslage f\xfcr die Programmierung eines prefekten Labyrinths",id:"ausgangslage-f\xfcr-die-programmierung-eines-prefekten-labyrinths",level:2}],l=(c="Comment",function(e){return console.warn("Component "+c+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var c;const m={toc:d};function f(e){let{components:n,...i}=e;return(0,o.kt)("wrapper",(0,t.Z)({},m,i,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("div",{className:"commentable"},(0,o.kt)("h1",{parentName:"div",id:"labyrinth"},"Labyrinth"),(0,o.kt)(l,{parentName:"div",type:"heading",nr:0,mdxType:"Comment"})),(0,o.kt)("div",{className:"commentable"},(0,o.kt)("h2",{parentName:"div",id:"ausgangslage-f\xfcr-die-programmierung-eines-prefekten-labyrinths"},"Ausgangslage f\xfcr die Programmierung eines prefekten Labyrinths"),(0,o.kt)(l,{parentName:"div",type:"heading",nr:1,mdxType:"Comment"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py id=6d768094-8526-4e7d-831b-3ae04f73e017",live_py:!0,id:"6d768094-8526-4e7d-831b-3ae04f73e017"},"from random import choice\n\nDIM_X = 31\nDIM_Y = 21\n\nfield = []\n\n# prepare list\nfor y in range(0, DIM_Y):\n    row = []\n    for x in range(0, DIM_X):\n        row.append(1)\n    field.append(row)\n\npos = [1, 1]\n\npositions = [pos]\npos_pointer = 0\nfinished = False\n\n# set field at current position to zero\nfield[pos[0]][pos[1]] = 0\n\n# repeat 5 times\n# TODO: repeat until finished\nfor i in range(5):\n    # all directions for the next step\n    options = ['UP', 'RIGHT', 'DOWN', 'LEFT']\n    success = False\n    \n    # find the next field - iterate until a new direction is found, or all\n    # options are checked\n    while len(options) > 0 and not success:\n\n        # pick a random direction from the list\n        direction = choice(options)\n        if direction == 'UP':\n            if False: # TODO (a) check if new cell is on field and (b) if new cell is not already taken\n                # TODO: mark cells as taken\n                # update position\n                 success = True\n            else:\n                # remove option\n                options.remove('UP')\n        elif direction == 'RIGHT':\n            # ...\n            options.remove('RIGHT')\n        elif direction == 'DOWN':\n            # ...\n            options.remove('DOWN')\n        elif direction == 'LEFT':\n            # ...\n            options.remove('LEFT')\n    if success:\n        # add current position to the position tracker\n        positions.append(pos)\n        # update position pointer (where can the current location be looked up?)\n        pos_pointer = len(positions) - 1\n    elif pos_pointer > 0: # is there is a location, where we can look around?\n        pos_pointer = pos_pointer - 1\n        pos = positions[pos_pointer]\n    else:\n        finished = True\n\n# print the maze\n# TODO: draw it with turtles\nfor rows in field:\n    for cell in rows:\n        if cell == 1:\n            print(' x ', end='')\n        else:\n            print(' . ', end='')\n    print('')\n")))}f.isMDXComponent=!0}}]);