"use strict";(self.webpackChunkofi_blog_versioned=self.webpackChunkofi_blog_versioned||[]).push([[32553],{53412:function(n,e,r){r.r(e),r.d(e,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return d},default:function(){return p}});var o=r(83117),t=r(80102),i=(r(67294),r(3905)),a=["components"],c={},s="Screencoord",l={unversionedId:"Programmieren-1/Turtlegrafik/screen-coords.nosync",id:"Programmieren-1/Turtlegrafik/screen-coords.nosync",title:"Screencoord",description:"Draw the screen coordinates.",source:"@site/docs/Programmieren-1/02-Turtlegrafik/900-screen-coords.nosync.md",sourceDirName:"Programmieren-1/02-Turtlegrafik",slug:"/Programmieren-1/Turtlegrafik/screen-coords.nosync",permalink:"/Programmieren-1/Turtlegrafik/screen-coords.nosync",editUrl:"https://github.com/lebalz/ofi-blog/edit/main/docs/Programmieren-1/02-Turtlegrafik/900-screen-coords.nosync.md",tags:[],version:"current",lastUpdatedAt:1635611224,formattedLastUpdatedAt:"10/30/2021",sidebarPosition:900,frontMatter:{},sidebar:"sidebar",previous:{title:"Python Programme",permalink:"/Programmieren-1/Turtlegrafik/python-scripts"},next:{title:"Python",permalink:"/category/python"}},d=[],m={toc:d};function p(n){var e=n.components,r=(0,t.Z)(n,a);return(0,i.kt)("wrapper",(0,o.Z)({},m,r,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"screencoord"},"Screencoord"),(0,i.kt)("p",null,"Draw the screen coordinates."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:"live_py title=Screen--coordinates.py id=71b84778-74e3-48be-a072-c5ca98f6b0a7",live_py:!0,title:"Screen--coordinates.py",id:"71b84778-74e3-48be-a072-c5ca98f6b0a7"},"from turtle import *\nturtle.set_defaults(\n    canvwidth = 280 * 2,\n    canvheight = 280 * 2\n)\nspeed(100)\ndef grid(xmin: int, xmax: int, ymin: int, ymax: int, tick: int, scale: int = 1):\n    old_pos = getturtle().pos()\n    old_pensize = getturtle().pensize()\n    pensize(1)\n    old_color = getturtle().color()\n    pencolor('lightgray')\n    offset_x = len(str(max(xmax, xmin))) * 2\n    offset_y = len(str(max(ymax, ymin))) * 2\n    for xtick in range(scale * xmin, scale * xmax + 1, tick):\n        penup()\n        goto(xtick + offset_x, scale * ymin - 15)\n        pencolor('black')\n        write(xtick, font=(\"Arial\", 8, \"normal\"), align='right')\n        pencolor('lightgray')\n\n        goto(xtick, scale * ymin)\n        pendown()\n        goto(xtick, scale * ymax)\n\n    for ytick in range(scale * ymin, scale * ymax + 1, tick):\n        penup()\n        goto(scale * xmin - 5, ytick - offset_y + 3)\n        pencolor('black')\n        write(ytick, align='right')\n        pencolor('lightgray')\n        goto(scale * xmin, ytick)\n        pendown()\n        goto(scale * xmax, ytick)\n    penup()\n    goto(*old_pos)\n    pendown()\n    pensize(old_pensize)\n    color(*old_color)\n\ndim = 250\ngrid(-dim, dim, -dim, dim, 25)\n\n# draw x axis\nbackward(250)\nforward(500)\nleft(150)\nforward(20)\nbackward(20)\nright(300)\nforward(20)\npenup()\ngoto(240, -20)\nwrite('x', font=(\"Arial\", 24, \"normal\"))\n\n\n# draw y axis\nhome()\nleft(90)\npendown()\nbackward(250)\nforward(500)\nleft(150)\nforward(20)\nbackward(20)\nright(300)\nforward(20)\npenup()\ngoto(-30, 240)\nwrite('y', font=(\"Arial\", 24, \"normal\"),)\nhome()\n\n")))}p.isMDXComponent=!0}}]);